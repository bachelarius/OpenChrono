<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>